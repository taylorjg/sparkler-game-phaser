const pos=location.pathname.lastIndexOf("/"),pathname=pos>=0?location.pathname.substr(0,pos):pathname,base=location.origin+pathname,CURRENT_CACHE_NAME="0.0.17",URLS_TO_CACHE=["/","/index.html","/icon.png","/manifest.json","/main.bundle.js","/stream-processor.js","/assets/fonts/arcade.png","/assets/fonts/arcade.xml","/assets/icons/66-microphone@2x.png","/assets/particles/star_06.png"];self.addEventListener("install",(async()=>{console.log("[service worker install]");const e=await caches.open("0.0.17");if(console.log("[service worker install]","cache:",e),e)for(const s of URLS_TO_CACHE){const a=base+s;console.log("[service worker install]","cache.add:",a),await e.add(a)}})),self.addEventListener("activate",(async()=>{console.log("[service worker activate]");const e=await caches.keys();console.log("[service worker activate]","old caches:",JSON.stringify(e));for(const s of e)"0.0.17"!==s&&(console.log("[service worker activate]","deleting old cache:",s),await caches.delete(s))})),self.addEventListener("fetch",(async e=>{e.respondWith(caches.match(e.request).then((s=>(console.log("[service worker fetch]","event.request.url:",e.request.url,"response:",s),s||fetch(e.request)))))}));